{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, ref } from \"vue\";\nimport axios from \"axios\"; // Use regular axios for now\nimport { useToast } from \"vue-toastification\";\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '../stores/auth';\nexport default {\n  __name: 'SignInView',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const form = reactive({\n      username: \"\",\n      password: \"\"\n    });\n    const errors = reactive({});\n    const toast = useToast();\n    const loading = ref(false);\n    const router = useRouter();\n    const authStore = useAuthStore();\n\n    // Configure axios defaults\n    axios.defaults.baseURL = 'http://localhost:8000';\n    axios.defaults.headers.common['Accept'] = 'application/json';\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\n    axios.defaults.withCredentials = true;\n    const handleSubmit = async () => {\n      errors.username = \"\";\n      errors.password = \"\";\n      loading.value = true;\n      try {\n        // First, get CSRF cookie\n        await axios.get('/sanctum/csrf-cookie');\n        console.log('Logging in with credentials:', form); // Add this for debugging\n        // Then attempt login\n        const response = await axios.post(\"/api/login\", form);\n        console.log('Login response:', response.data.token); // Add this for debugging\n        // console.log(response.data)\n        router.push({\n          name: 'dashboard'\n        });\n        if (response.data.token) {\n          authStore.setToken(response.data.token);\n          toast.success(\"Sign In Successful\");\n          router.push({\n            name: 'dashboard'\n          });\n        } else {\n          throw new Error('No token received');\n        }\n      } catch (error) {\n        console.error('Login error details:', error.response || error); // Enhanced error logging\n        loading.value = false;\n        if (error.response?.status === 401) {\n          toast.error(\"Invalid credentials\");\n        } else {\n          toast.error(\"Sign In Failed - Network Error\");\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      form,\n      errors,\n      toast,\n      loading,\n      router,\n      authStore,\n      handleSubmit,\n      reactive,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useToast() {\n        return useToast;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","ref","axios","useToast","useRouter","useAuthStore","form","username","password","errors","toast","loading","router","authStore","defaults","baseURL","headers","common","withCredentials","handleSubmit","value","get","console","log","response","post","data","token","push","name","setToken","success","Error","error","status"],"sources":["F:/sample/frontend/src/views/SignInView.vue"],"sourcesContent":["<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport axios from \"axios\";  // Use regular axios for now\r\nimport { useToast } from \"vue-toastification\";\r\nimport { useRouter } from 'vue-router';\r\nimport { useAuthStore } from '../stores/auth';\r\n\r\nconst form = reactive({\r\n    username: \"\",\r\n    password: \"\",\r\n});\r\n\r\nconst errors = reactive({});\r\nconst toast = useToast();\r\nconst loading = ref(false);\r\nconst router = useRouter();\r\nconst authStore = useAuthStore();\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = 'http://localhost:8000';\r\naxios.defaults.headers.common['Accept'] = 'application/json';\r\naxios.defaults.headers.common['Content-Type'] = 'application/json';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst handleSubmit = async () => {\r\n    errors.username = \"\";\r\n    errors.password = \"\";\r\n    loading.value = true;\r\n\r\n    try {\r\n        // First, get CSRF cookie\r\n        await axios.get('/sanctum/csrf-cookie');\r\n        console.log('Logging in with credentials:', form); // Add this for debugging\r\n        // Then attempt login\r\n        const response = await axios.post(\"/api/login\", form);\r\n        console.log('Login response:', response.data.token);  // Add this for debugging\r\n        // console.log(response.data)\r\n        router.push({ name: 'dashboard' });\r\n        if (response.data.token) {\r\n            authStore.setToken(response.data.token);\r\n            toast.success(\"Sign In Successful\");\r\n            router.push({ name: 'dashboard' });\r\n        } else {\r\n            throw new Error('No token received');\r\n        }\r\n    } catch (error) {\r\n        console.error('Login error details:', error.response || error);  // Enhanced error logging\r\n        loading.value = false;\r\n        if (error.response?.status === 401) {\r\n            toast.error(\"Invalid credentials\");\r\n        } else {\r\n            toast.error(\"Sign In Failed - Network Error\");\r\n        }\r\n    } finally {\r\n        loading.value = false;\r\n    }\r\n};\r\n</script>\r\n<template>\r\n  <section class=\"bg-green-50\">\r\n    <div class=\"container m-auto max-w-2xl py-24\">\r\n      <div class=\"bg-white px-6 py-8 mb-4 shadow-md rounded-md border m-4 md:m-0\">\r\n        <form @submit.prevent=\"handleSubmit\">\r\n          <h2 class=\"text-3xl text-center font-semibold mb-6\">Sign In</h2>\r\n\r\n          <!-- Username Input -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"username\" class=\"block text-gray-700 font-bold mb-2\">Username</label>\r\n            <input\r\n              type=\"text\"\r\n              v-model=\"form.username\"\r\n              id=\"username\"\r\n              name=\"username\"\r\n              class=\"border rounded w-full py-2 px-3 mb-2\"\r\n              required\r\n              aria-describedby=\"usernameError\"\r\n              :class=\"{ 'border-red-500': errors.username }\"\r\n            />\r\n            <p v-if=\"errors.username\" class=\"text-red-500 text-sm\" id=\"usernameError\">\r\n              {{ errors.username }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Password Input -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"password\" class=\"block text-gray-700 font-bold mb-2\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              v-model=\"form.password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              class=\"border rounded w-full py-2 px-3 mb-2\"\r\n              required\r\n              aria-describedby=\"passwordError\"\r\n              :class=\"{ 'border-red-500': errors.password }\"\r\n            />\r\n            <p v-if=\"errors.password\" class=\"text-red-500 text-sm\" id=\"passwordError\">\r\n              {{ errors.password }}\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Submit Button -->\r\n          <div>\r\n            <button\r\n              class=\"bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded-full w-full focus:outline-none focus:shadow-outline\"\r\n              type=\"submit\"\r\n              :disabled=\"loading\"\r\n            >\r\n              <span v-if=\"loading\">Signing In...</span>\r\n              <span v-else>Sign In</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</template>\r\n\r\n<style scoped>\r\n/* You can add some custom styles here if needed */\r\n</style>\r\n"],"mappings":";AACA,SAASA,QAAQ,EAAEC,GAAG,QAAQ,KAAK;AACnC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAE;AAC5B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,QAAQ,gBAAgB;;;;;;;IAE7C,MAAMC,IAAI,GAAGN,QAAQ,CAAC;MAClBO,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,MAAM,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3B,MAAMU,KAAK,GAAGP,QAAQ,CAAC,CAAC;IACxB,MAAMQ,OAAO,GAAGV,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMW,MAAM,GAAGR,SAAS,CAAC,CAAC;IAC1B,MAAMS,SAAS,GAAGR,YAAY,CAAC,CAAC;;IAEhC;IACAH,KAAK,CAACY,QAAQ,CAACC,OAAO,GAAG,uBAAuB;IAChDb,KAAK,CAACY,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB;IAC5Df,KAAK,CAACY,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;IAClEf,KAAK,CAACY,QAAQ,CAACI,eAAe,GAAG,IAAI;IAErC,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7BV,MAAM,CAACF,QAAQ,GAAG,EAAE;MACpBE,MAAM,CAACD,QAAQ,GAAG,EAAE;MACpBG,OAAO,CAACS,KAAK,GAAG,IAAI;MAEpB,IAAI;QACA;QACA,MAAMlB,KAAK,CAACmB,GAAG,CAAC,sBAAsB,CAAC;QACvCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEjB,IAAI,CAAC,CAAC,CAAC;QACnD;QACA,MAAMkB,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,YAAY,EAAEnB,IAAI,CAAC;QACrDgB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAE;QACtD;QACAf,MAAM,CAACgB,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,CAAC;QAClC,IAAIL,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;UACrBd,SAAS,CAACiB,QAAQ,CAACN,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;UACvCjB,KAAK,CAACqB,OAAO,CAAC,oBAAoB,CAAC;UACnCnB,MAAM,CAACgB,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAY,CAAC,CAAC;QACtC,CAAC,MAAM;UACH,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;QACxC;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZX,OAAO,CAACW,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACT,QAAQ,IAAIS,KAAK,CAAC,CAAC,CAAE;QACjEtB,OAAO,CAACS,KAAK,GAAG,KAAK;QACrB,IAAIa,KAAK,CAACT,QAAQ,EAAEU,MAAM,KAAK,GAAG,EAAE;UAChCxB,KAAK,CAACuB,KAAK,CAAC,qBAAqB,CAAC;QACtC,CAAC,MAAM;UACHvB,KAAK,CAACuB,KAAK,CAAC,gCAAgC,CAAC;QACjD;MACJ,CAAC,SAAS;QACNtB,OAAO,CAACS,KAAK,GAAG,KAAK;MACzB;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}